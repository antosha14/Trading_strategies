version: "3.3"
services:
  db:
    image: postgres:16.2
    restart: always
    volumes:
      - ./database/pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD?Variable not set}
      - POSTGRES_USER=${POSTGRES_USER?Variable not set}
      - POSTGRES_DB=${POSTGRES_DB?Variable not set}
    ports:
      - 5432:5432

  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=pepa-linha-dark
    ports:
      - 8080:8080

  pgadmin:
    image: dpage/pgadmin4:8.7
    networks:
      - default
    depends_on:
      - db
    env_file:
      - .env
    ports:
      - "5050:5050"

  queue:
    image: rabbitmq:3.13-management
    env_file:
      - .env
    ports:
      - "5671:5671"
      - "5672:5672"
      - "15672:15672"
      - "15671:15671"

  flower:
    image: mher/flower:2.0
    depends_on:
      - queue
    ports:
      - "5555:5555"
    env_file:
      - .env
    command:
      - "--broker=amqp://guest@queue:5672//"
      - "--broker_api=http://guest:guest@queue:15672/api//"
    labels:
      - traefik.enable=true

  data_filler:
    image: "${DOCKER_IMAGE_GATHERING?Variable not set}:${TAG-latest}"
    networks:
      - default
    depends_on:
      - db
      - queue
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      # Allow explicit env var override for tests
      - SMTP_HOST=${SMTP_HOST}
    build:
      context: ./data_filler
      dockerfile: data_filler.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
    ports:
      - "8888:8888"

  celeryworker:
    image: "${DOCKER_IMAGE_CELERYWORKER?Variable not set}:${TAG-latest}"
    depends_on:
      - db
      - queue
    env_file:
      - .env
    environment:
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      # Allow explicit env var override for tests
      - SMTP_HOST=${SMTP_HOST?Variable not set}
    build:
      context: ./backend
      dockerfile: celeryworker.dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV-false}
